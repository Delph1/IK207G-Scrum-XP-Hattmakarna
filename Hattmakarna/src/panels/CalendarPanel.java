/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package panels;

import static hattmakarna.Hattmakarna.dbm;
import hattmakarna.MainWindow;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import models.OrderLine;
import models.User;

/**
 *
 * @author alex
 */
public class CalendarPanel extends javax.swing.JPanel {

    private MainWindow window;
    private ArrayList<OrderLine> myOrderlinesList;
    private DefaultListModel<OrderLine> myOrderlinesListModel;
    private ArrayList<OrderLine> OrderlinesMonthList;
    private DefaultListModel<OrderLine> OrderlinesMonthListModel; 

    /**
     * Creates new form CalendarPanel
     */
    public CalendarPanel(MainWindow window, int user_id) throws ParseException {
        initComponents();
        this.window = window;
        User user = dbm.getUser(user_id);
        myOrderlinesListModel = new DefaultListModel<>();
        jListMyOrderlinesDate.setModel(myOrderlinesListModel);
        OrderlinesMonthListModel = new DefaultListModel<>();
        jListMonthOrderlines.setModel(OrderlinesMonthListModel);
        
        jCalendar1.addPropertyChangeListener("calendar", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent e) {
                final Calendar c = (Calendar) e.getNewValue();
                System.out.println(c.getTime());
                Date theDate = c.getTime();
                String date = theDate.toString();
                String pattern = "yyyy-MM-dd";
                DateFormat df = new SimpleDateFormat(pattern);
                String datef = df.format(theDate);
                myOrderlinesList = dbm.getHatmakerOrderlines(user_id);
                myOrderlinesListModel.clear();
                for (OrderLine myOrderlines : myOrderlinesList) {
                    String delivery_date = myOrderlines.getDeliveryDate();
                    if (delivery_date.equals(datef)) {
                        myOrderlinesListModel.addElement(myOrderlines);
                    }
                }
                
                
                OrderlinesMonthListModel.clear();
                for (OrderLine myOrderlines : myOrderlinesList) {
                    String delivery_date = myOrderlines.getDeliveryDate();
                    Date theDeliveryDate = null;
                    try {
                        theDeliveryDate = df.parse(delivery_date);
                    } catch (ParseException ex) {
                        Logger.getLogger(CalendarPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //Creating new calendar and setting it to what's in the db (as is in loop)
                    Calendar cal2 = Calendar.getInstance();
                    cal2.setTime(theDeliveryDate);
                    int dayc2 = cal2.get(Calendar.DAY_OF_MONTH);
                    int monthc2 = cal2.get(Calendar.MONTH);
                    int yearc2 = cal2.get(Calendar.YEAR);
                    if (jCalendar1.getCalendar().get(Calendar.MONTH) == monthc2 && jCalendar1.getCalendar().get(Calendar.YEAR) == yearc2) {
                        OrderlinesMonthListModel.addElement(myOrderlines);
                    }
                }
            }
        });
        
        jCalendar1.getCalendar().setTime(jCalendar1.getCalendar().getTime());
        System.out.println("Hello");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabelMonthDeliveries = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListMyOrderlinesDate = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMonthOrderlines = new javax.swing.JList<>();

        jLabelMonthDeliveries.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelMonthDeliveries.setText("MÃ¥nadens leveranser");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(jLabelMonthDeliveries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMonthDeliveries))
        );

        jScrollPane2.setViewportView(jListMyOrderlinesDate);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jListMonthOrderlines);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabelMonthDeliveries;
    private javax.swing.JList<OrderLine> jListMonthOrderlines;
    private javax.swing.JList<OrderLine> jListMyOrderlinesDate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
